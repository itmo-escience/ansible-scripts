---

# TODO: correct checks if there can be situation when only hdd or ssd pnly can be working

# - name: check hdd dir {{agent_hdd_dir}}
  # stat: path={{agent_hdd_dir}}
  # register: hdd_dirstat

# - fail: msg="stop - {{agent_hdd_dir}} doesn't exist"
  # when: hdd_dir.stat.isdir is defined and hdd_dir.stat.isdir

# - name: check hdd dir {{agent_ssd_dir}}
  # stat: path={{agent_ssd_dir}}
  # register: ssd_dir

# - fail: msg="stop - {{agent_ssd_dir}} doesn't exist"
  # when: ssd_dir.stat.isdir is defined and ssd_dir.stat.isdir

- name: create hdd dir {{agent_hdd_dir}}
  file: path={{agent_hdd_dir}} state=directory

- name: create ssd dir {{agent_ssd_dir}}
  file: path={{agent_ssd_dir}} state=directory
  
  #stat: path={{agent_hdd_dir}}
  #register: hdd_dirstat

#- fail: msg="stop - {{agent_hdd_dir}} doesn't exist"
#  when: hdd_dir.stat.isdir is defined and hdd_dir.stat.isdir

#- name: check hdd dir {{agent_ssd_dir}}
#  stat: path={{agent_ssd_dir}}
#  register: ssd_dir

#- fail: msg="stop - {{agent_ssd_dir}} doesn't exist"
#  when: ssd_dir.stat.isdir is defined and ssd_dir.stat.isdir

- name: install necessary tools
  apt: name={{ item }} state=present update_cache=no force=yes
  with_items:
    - maven
    #- git
  tags:
    - install

- name: correct /usr/lib/jvm/default-java value
  file: src=/usr/lib/jvm/java-8-oracle dest=/usr/lib/jvm/default-java state=link

- name: copy repo deploy key to obtain sources
  copy: src=../repo-keys/dstorage-agent/id_rsa dest={{agent_repo_key_path}} mode=0700
  tags:
    - install

- name: clean clone dir - {{agent_clone_dir}}
  file: path={{agent_clone_dir}} state=absent

- name: obtain dstorage-agent sources
  git: repo=git@github.com:itmo-escience/dstorage-agent.git
    version={{agent_tag}}
    dest={{agent_clone_dir}}
    accept_hostkey=True
    key_file="{{agent_repo_key_path}}"
    clone=yes update=yes
  tags:
      - install

- name: add pom.xml to build sources
  copy: src=agent-pom.xml dest={{agent_clone_dir}}/pom.xml
  tags:
      - install

# TODO: should be changed and implemented correctly!!!
- name: change maven settings (add proxy)
  copy: src=maven-settings.xml dest=/etc/maven/settings.xml
  tags:
    - install

- name: build dstorage-agent
  shell: "mvn package -DproxySet=true -DproxyHost=proxy.ifmo.ru -DproxyPort=3128"
  args:
    chdir: "{{agent_clone_dir}}"
  tags:
      - install

- name: Ensures {{agent_install_dir}} installation dir exists
  file: path={{agent_install_dir}} state=directory
  tags:
      - install

- name: install dstorage-agent executable from {{agent_clone_dir}}/target to dir {{agent_install_dir}}
  shell: "cp {{agent_clone_dir}}/target/{{agent_binary_name}} {{agent_install_dir}}/dstorage-agent.jar"
  tags:
      - install

- name: ensure {{agent_install_dir}}/dstorage-agent.jar exists
  file: dest={{agent_install_dir}}/dstorage-agent.jar state=file
  tags:
      - install

- name: Create service conf file /etc/init/dstorage-agent.conf
  template: src=dstorage-agent.conf.j2 dest=/etc/init/dstorage-agent.conf
  tags:
     - install

- name: Disable service dstorage-agent
  service: name=dstorage-agent state=stopped enabled=no
  tags:
      - install

- name: configure dstorage-agent Agent.cfg
  template: src=Agent.cfg.j2 dest={{agent_install_dir}}/Agent.cfg
  notify:
      - Restart dstorage-agent
  tags:
      - configure

- name: start and enable service dstorage-agent
  service: name=dstorage-agent state=started enabled=yes
  tags:
    - start

#- name: stop and disable service dstorage-agent
#  service: name=dstorage-agent state=stopped enabled=no
#  tags:
#    - stop