#!/bin/sh
PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME={{item.key}}
DAEMON="/usr/bin/java"
DAEMON_ARGS="-cp {{clone_dir}}/{{item.key}}/{{item.key}}-1.0-jar-with-dependencies.jar -Duser.dir={{clone_dir}}/{{item.key}} -Dlog4j.configurationFile={{clone_dir}}/{{item.key}}/log4j2.xml {{item.value.namespace}}.{{item.key}}"
DAEMON_USER={{daemon_user}}
PIDFILE="/var/run/$NAME.pid"
LOGFILE="/var/log/$NAME.log"

if [ ! -x $DAEMON ]; then
  echo "ERROR: Can't execute $DAEMON."
  exit 1
fi

start_service() {
  echo -n " * Starting $NAME... "
  #start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON -- $DAEMON_ARGS
  #echo 'start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --chuid $DAEMON_USER --startas /bin/bash -- -c "exec $DAEMON $DAEMON_ARGS > /var/log/some.log 2>&1"'
  start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --startas /bin/bash -- -c "exec $DAEMON $DAEMON_ARGS > $LOGFILE 2>&1"
  e=$?
  if [ $e -eq 1 ]; then
    echo "already running"
    return
  fi

  if [ $e -eq 255 ]; then
    echo "couldn't start :("
    exit 1
  fi

  echo "done"
}

stop_service() {
  echo -n " * Stopping $NAME... "
  start-stop-daemon -Kq -R 10 -p $PIDFILE
  e=$?
  if [ $e -eq 1 ]; then
    echo "not running"
    return
  fi

  echo "done"
}

status_service() {
    printf "%-50s" "Checking $NAME..."
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            printf "%s\n" "Process dead but pidfile exists"
            exit 1
        else
            echo "Running"
        fi
    else
        printf "%s\n" "Service not running"
        exit 3
    fi
}

case "$1" in
  status)
    status_service
    ;;
  start)
    start_service
    ;;
  stop)
    stop_service
    ;;
  restart)
    stop_service
    start_service
    ;;
  *)
    echo "Usage: service $NAME {start|stop|restart|status}" >&2
    exit 1
    ;;
esac

exit 0