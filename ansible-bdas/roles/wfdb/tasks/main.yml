# - name: gcc/libcurl4-openssl-dev/libexpat1-dev
  # apt: name="{{item}}" state=present
  # with_items:
      # - gcc 
      # - libcurl4-openssl-dev 
      # - libexpat1-dev
  # sudo: yes
  # tags:
    # - install

# - name: download wfdb.tar.gz
  # environment: "{{proxy_env}}"
  # get_url: url='https://www.physionet.org/physiotools/wfdb.tar.gz' dest='/tmp/wfdb.tar.gz'
  # tags:
    # - install

# - name: unarchive wfdb.tar.gz
  # unarchive: copy=no src='/tmp/wfdb.tar.gz' dest='/opt'
  # tags:
    # - install

 
 # #shell: "find . -type d  -name 'wfdb-*' | xargs cp -t /opt/wfdb" 
# - name: copy all the contents to /opt/wfdb
  # command: bash -c "cp -a /opt/wfdb-10.5.24/* /opt/wfdb"
  # sudo: yes
  # tags:
    # - install

# - name: configure/make install
  # command: bash -c "./configure"
  # args: 
    # chdir: /opt/wfdb
  # sudo: yes
  # tags:
    # - install

# - name: make install
  # command: make install
  # args: 
    # chdir: /opt/wfdb
  # sudo: yes
  # tags:
    # - install

# - name: make check
  # command: make check
  # args: 
    # chdir: /opt/wfdb
  # sudo: yes
  # tags:
    # - install

- name: copy wrdb.zip to /tmp/wfdb.zip
  copy: src=wfdb.zip dest=/tmp
  tags:
     - install

- name: Creating /opt/wfdb
  file: path="/opt/wfdb" state=directory
  sudo: yes
  tags:
  - install

- name: unarchive wfdb.zip
  unarchive: copy=no src=/tmp/wfdb.zip dest=/opt
  tags:
     - install

- set_fact: path="/opt/wfdb/bin"
- name: add wfdb.sh to etc/profile.d
  template: src=addPath.sh.j2 dest=/etc/profile.d/wfdb.sh mode=644
  tags:
    - install

- name: setting 777 for '/opt/wfdb'
  command: chmod -R 777 '/opt/wfdb'
  sudo: yes
