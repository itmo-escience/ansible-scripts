---
#- name: check storm_dir dir exist
#  stat: path = {{storm_dir}}
#  register: storm_dir

#- debug: msg="{{storm_dir}} is dir"
#  when: storm_dir.stat.islink is defined and storm_dir.stat.stat.islink

#- fail: msg="{{storm_dir}} is defined (path exists)"
#  when: storm_dir_stat.islnk is defined

####Package storm from sources (not ideal)
#- name: install necessary tools
#  apt: name={{ item }} state=present update_cache=no
#  with_items:
#    - git
#    - maven
#  tags:
#    - install
#
#- name: cloning storm sources to /opt/{{storm_name}}
#  git: repo=https://github.com/apache/storm.git
#       dest="/opt/{{storm_name}}"
#       clone=yes
#  tags:
#      - install
#
## TODO: should be changed and implemented correctly!!!
#- name: change maven settings (add proxy)
#  copy: src=maven-settings.xml dest=/etc/maven/settings.xml
#  tags:
#    - install
#
#- name: build storm from {{storm_name}}
#  shell: "mvn package -DproxySet=true -DproxyHost=proxy.ifmo.ru -DproxyPort=3128 -DskipTests=true"
#  args:
#    chdir: "/opt/{{storm_name}}"
#  tags:
#   - install

- name: upadting apt-cache
  apt: update_cache=yes
  tags:
    - install

- name: install unzip/python/supervisor
  apt: name="{{item}}" state=present
  with_items:
      - htop
      - mc
      - unzip
      - python
      - python-pip
  sudo: yes
  tags:
    - install


###JAVA
# - name: dpkg --configure -a
  # become: true
  # shell: "dpkg --configure -a"

# - name: Install add-apt-repostory
  # become: yes
  # apt: name=software-properties-common dpkg_options="force-confnew,force-confmiss" state=present

# - name: Add Oracle Java Repository
  # become: yes
  # apt_repository: repo='ppa:webupd8team/java'

# - name: Accept Java 8 License
  # become: yes
  # debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'

# - name: Install Oracle Java 8
  # become: yes
  # apt: name={{item}} state=present
  # with_items:
    # - oracle-java8-installer
    # - ca-certificates
    # - oracle-java8-set-default

# Below is ok
- name: delete previous /tmp/ download
  file: path='/tmp/{{ storm_archive }}' state=absent
  sudo: yes
  tags:
    - install

- name: delete previous /opt/{{storm_name}}
  #file: path='/opt/{{storm_name}}' state=absent
  command: "sudo rm -rf /opt/{{storm_name}}"
  sudo: yes
  tags:
    - install

- name: download storm...
  environment: "{{proxy_env}}"
  get_url: url='{{ storm_url }}' dest='/tmp/{{ storm_archive }}'
  tags:
    - install

#- name: Ensures /opt/{{storm_name}} dir exists
#  file: path="/opt/{{storm_name}}" state=directory

- name: install storm...
  unarchive: copy=no src='/tmp/{{ storm_archive }}' dest='/opt'
  tags:
    - install

#- name: copying defaults
#  template: src=defaults.yaml-{{storm_ver}}.j2 dest={{storm_dir}}/defaults.yaml
#  tags:
#    - install

- name: setting 777 for '/opt/{{storm_name}}'
  command: chmod -R 777 '/opt/{{storm_name}}'
  sudo: yes
  tags:
    - install

- name: linking {{storm_dir}}...
  file: src='/opt/{{storm_name}}' dest={{storm_dir}} state=link
  tags:
    - install

- name: include storm in the default path...
  copy: src='etc/profile.d/storm.sh' dest='/etc/profile.d/storm.sh' mode=644
  tags:
    - install
- name: setting 777 for '{{storm_dir}}'
  command: chmod -R 777 '{{storm_dir}}'
  sudo: yes

## TODO: Some problems may be here
- name: installing supervisor python module
  pip: >-
    name=supervisor
    version=3.0b2
  tags:
    - install
    - slave
    - supervisor
#executable=/opt/anaconda/bin/pip

- name: install supervisor
  apt: name={{item}} state=present
  with_items:
      - supervisor
  tags:
    - install
    - supervisor

- name: install zookeeper/zookeeperd
  apt: name={{item}}
  with_items:
      - zookeeper
      - zookeeperd
  notify:
    - restart zookeeper
  tags:
    - install
    - master
    - zookeeper
  when: "master is defined"
